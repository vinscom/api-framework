package in.erail.model;

import io.vertx.core.json.Json;
import io.vertx.core.json.JsonObject;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Test;

/**
 *
 * @author vinay
 */
public class ReqestEventTest {

  private String stringJson = "{\n"
          + "    \"resource\": \"/{proxy+}\",\n"
          + "    \"path\": \"/hello/world\",\n"
          + "    \"httpMethod\": \"POST\",\n"
          + "    \"headers\": {\n"
          + "      \"Accept\": \"*/*\",\n"
          + "      \"Accept-Encoding\": \"gzip, deflate\",\n"
          + "      \"cache-control\": \"no-cache\",\n"
          + "      \"CloudFront-Forwarded-Proto\": \"https\",\n"
          + "      \"CloudFront-Is-Desktop-Viewer\": \"true\",\n"
          + "      \"CloudFront-Is-Mobile-Viewer\": \"false\",\n"
          + "      \"CloudFront-Is-SmartTV-Viewer\": \"false\",\n"
          + "      \"CloudFront-Is-Tablet-Viewer\": \"false\",\n"
          + "      \"CloudFront-Viewer-Country\": \"US\",\n"
          + "      \"Content-Type\": \"application/json\",\n"
          + "      \"headerName\": \"headerValue\",\n"
          + "      \"Host\": \"gy415nuibc.execute-api.us-east-1.amazonaws.com\",\n"
          + "      \"Postman-Token\": \"9f583ef0-ed83-4a38-aef3-eb9ce3f7a57f\",\n"
          + "      \"User-Agent\": \"PostmanRuntime/2.4.5\",\n"
          + "      \"Via\": \"1.1 d98420743a69852491bbdea73f7680bd.cloudfront.net (CloudFront)\",\n"
          + "      \"X-Amz-Cf-Id\": \"pn-PWIJc6thYnZm5P0NMgOUglL1DYtl0gdeJky8tqsg8iS_sgsKD1A==\",\n"
          + "      \"X-Forwarded-For\": \"54.240.196.186, 54.182.214.83\",\n"
          + "      \"X-Forwarded-Port\": \"443\",\n"
          + "      \"X-Forwarded-Proto\": \"https\"\n"
          + "    },\n"
          + "    \"multiValueHeaders\":{\n"
          + "      \"Accept\":[\n"
          + "        \"*/*\"\n"
          + "      ],\n"
          + "      \"Accept-Encoding\":[\n"
          + "        \"gzip, deflate\"\n"
          + "      ],\n"
          + "      \"cache-control\":[\n"
          + "        \"no-cache\"\n"
          + "      ],\n"
          + "      \"CloudFront-Forwarded-Proto\":[\n"
          + "        \"https\"\n"
          + "      ],\n"
          + "      \"CloudFront-Is-Desktop-Viewer\":[\n"
          + "        \"true\"\n"
          + "      ],\n"
          + "      \"CloudFront-Is-Mobile-Viewer\":[\n"
          + "        \"false\"\n"
          + "      ],\n"
          + "      \"CloudFront-Is-SmartTV-Viewer\":[\n"
          + "        \"false\"\n"
          + "      ],\n"
          + "      \"CloudFront-Is-Tablet-Viewer\":[\n"
          + "        \"false\"\n"
          + "      ],\n"
          + "      \"CloudFront-Viewer-Country\":[\n"
          + "        \"US\"\n"
          + "      ],\n"
          + "      \"\":[\n"
          + "        \"\"\n"
          + "      ],\n"
          + "      \"Content-Type\":[\n"
          + "        \"application/json\"\n"
          + "      ],\n"
          + "      \"headerName\":[\n"
          + "        \"headerValue\"\n"
          + "      ],\n"
          + "      \"Host\":[\n"
          + "        \"gy415nuibc.execute-api.us-east-1.amazonaws.com\"\n"
          + "      ],\n"
          + "      \"Postman-Token\":[\n"
          + "        \"9f583ef0-ed83-4a38-aef3-eb9ce3f7a57f\"\n"
          + "      ],\n"
          + "      \"User-Agent\":[\n"
          + "        \"PostmanRuntime/2.4.5\"\n"
          + "      ],\n"
          + "      \"Via\":[\n"
          + "        \"1.1 d98420743a69852491bbdea73f7680bd.cloudfront.net (CloudFront)\"\n"
          + "      ],\n"
          + "      \"X-Amz-Cf-Id\":[\n"
          + "        \"pn-PWIJc6thYnZm5P0NMgOUglL1DYtl0gdeJky8tqsg8iS_sgsKD1A==\"\n"
          + "      ],\n"
          + "      \"X-Forwarded-For\":[\n"
          + "        \"54.240.196.186, 54.182.214.83\"\n"
          + "      ],\n"
          + "      \"X-Forwarded-Port\":[\n"
          + "        \"443\"\n"
          + "      ],\n"
          + "      \"X-Forwarded-Proto\":[\n"
          + "        \"https\"\n"
          + "      ]\n"
          + "    },\n"
          + "    \"queryStringParameters\": {\n"
          + "      \"name\": \"me\",\n"
          + "      \"multivalueName\": \"me\"\n"
          + "    },\n"
          + "    \"multiValueQueryStringParameters\":{\n"
          + "      \"name\":[\n"
          + "        \"me\"\n"
          + "      ],\n"
          + "      \"multivalueName\":[\n"
          + "        \"you\",\n"
          + "        \"me\"\n"
          + "      ]\n"
          + "    },\n"
          + "    \"pathParameters\": {\n"
          + "      \"proxy\": \"hello/world\"\n"
          + "    },\n"
          + "    \"stageVariables\": {\n"
          + "      \"stageVariableName\": \"stageVariableValue\"\n"
          + "    },\n"
          + "    \"requestContext\": {\n"
          + "      \"accountId\": \"12345678912\",\n"
          + "      \"resourceId\": \"roq9wj\",\n"
          + "      \"stage\": \"testStage\",\n"
          + "      \"requestId\": \"deef4878-7910-11e6-8f14-25afc3e9ae33\",\n"
          + "      \"identity\": {\n"
          + "        \"cognitoIdentityPoolId\": null,\n"
          + "        \"accountId\": null,\n"
          + "        \"cognitoIdentityId\": null,\n"
          + "        \"caller\": null,\n"
          + "        \"apiKey\": null,\n"
          + "        \"sourceIp\": \"192.168.196.186\",\n"
          + "        \"cognitoAuthenticationType\": null,\n"
          + "        \"cognitoAuthenticationProvider\": null,\n"
          + "        \"userArn\": null,\n"
          + "        \"userAgent\": \"PostmanRuntime/2.4.5\",\n"
          + "        \"user\": null\n"
          + "      },\n"
          + "      \"resourcePath\": \"/{proxy+}\",\n"
          + "      \"httpMethod\": \"POST\",\n"
          + "      \"apiId\": \"gy415nuibc\"\n"
          + "    },\n"
          + "    \"body\": \"eyJhIjogMX0=\",\n"
          + "    \"isBase64Encoded\": true\n"
          + "  }";

  @Test
  public void tesMapping() {
    RequestEvent request = Json.decodeValue(stringJson, RequestEvent.class);
    JsonObject json = JsonObject.mapFrom(request);
    JsonObject result = new JsonObject(stringJson);
    assertEquals(json, result);
  }

}
